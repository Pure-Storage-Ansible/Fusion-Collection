# Prepare dependencies
- name: Create new tenat foo_tenant
  purestorage.fusion.fusion_tenant:
    name: foo_tenant
    display_name: "tenant foo"
  environment: "{{ test_env }}"

- name: Create new tenant space foo_tenant_space for tenant_foo
  purestorage.fusion.fusion_ts:
    name: foo_tenant_space
    tenant: foo_tenant
    state: present
  environment: "{{ test_env }}"

- name: Create new storage service foo_service
  purestorage.fusion.fusion_ss:
    name: foo_service
    hardware_types:
      - flash-array-x
    display_name: "test class"
  environment: "{{ test_env }}"


# Test placement groups

- name: Create new placement group named foo_pg
  purestorage.fusion.fusion_pg:
    name: foo_pg
    tenant: foo_tenant
    tenant_space: foo_tenant_space
    availability_zone: az1
    region: pure-us-west
    storage_service: foo_service
    state: present
  register: result
  environment: "{{ test_env }}"
- name: Validate the task
  ansible.builtin.assert:
    that:
      - result is success
      - result is changed

- name: Collect placement_groups and check the placement group exists
  purestorage.fusion.fusion_info:
    gather_subset: placement_groups
  register: fusion_info
  environment: "{{ test_env }}"
- name: Validate the task
  ansible.builtin.assert:
    that: "'foo_tenant/foo_tenant_space/foo_pg' in fusion_info['fusion_info']['placement_groups']"

- name: Delete placement group foo
  purestorage.fusion.fusion_pg:
    name: foo_pg
    tenant: foo_tenant
    tenant_space: foo_tenant_space
    state: absent
  register: result
  environment: "{{ test_env }}"
- name: Validate the task
  ansible.builtin.assert:
    that:
      - result is success
      - result is changed

- name: Collect placement_groups and check the placement group does not exist
  purestorage.fusion.fusion_info:
    gather_subset: placement_groups
  register: fusion_info
  environment: "{{ test_env }}"
- name: Validate the task
  ansible.builtin.assert:
    that: "'foo_tenant/foo_tenant_space/foo_pg' not in fusion_info['fusion_info']['placement_groups']"


# Teardown dependencies

- name: Delete storage service foo_service
  purestorage.fusion.fusion_ss:
    name: foo_service
    state: absent
  environment: "{{ test_env }}"

- name: Delete foo_tenant_space
  purestorage.fusion.fusion_ts:
    name: foo_tenant_space
    tenant: foo_tenant
    state: absent
  environment: "{{ test_env }}"

- name: Delete tenat foo
  purestorage.fusion.fusion_tenant:
    name: foo_tenant
    state: absent
  environment: "{{ test_env }}"
